function MapManager(game, map){
	this.map = null;
	this.floor = null;
	this.floorY = null;
	this.ceil = null;
	
	this.waterTiles = [];
	this.waterFrame = 0;
	
	this.game = game;
	this.player = null;
	
	if (map == "test"){
		this.createTestMap();
	}
}

MapManager.prototype.createTestMap = function(){
	this.map = [
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0],
		[0,0,0,0,0,3,0,3,3,3,0,3,0,0,0,0,0,0,0],
		[0,0,0,0,0,3,0,0,3,0,0,3,0,0,0,0,0,0,0],
		[0,0,0,0,0,3,0,0,3,0,0,3,0,0,0,0,0,0,0],
		[0,0,0,0,0,3,0,0,3,0,0,3,0,0,0,0,0,0,0],
		[0,0,0,0,0,3,0,0,3,0,0,3,0,0,0,0,0,0,0],
		[0,0,0,0,0,3,3,3,0,3,3,3,0,0,0,1,1,1,0],
		[0,0,0,0,0,0,0,3,0,3,0,0,0,0,1,1,0,1,0],
		[0,0,0,0,0,0,0,3,0,3,0,0,0,1,1,0,0,1,1],
		[0,0,0,0,0,0,0,3,0,3,3,3,3,1,0,0,0,0,1],
		[0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,1],
		[0,0,0,0,0,0,0,3,3,3,3,0,3,1,0,0,0,0,1],
		[0,0,0,0,0,0,0,0,0,0,3,0,3,1,0,0,0,0,1],
		[0,0,0,0,0,0,0,0,0,0,3,0,3,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,1,1,1,3,0,3,1,1,1,0,0,0],
		[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0],
		[0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0],
		[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
		[0,2,2,1,2,1,1,1,0,0,0,0,0,0,0,1,0,0,0],
		[0,2,0,0,0,2,2,1,1,1,1,1,1,1,1,1,0,0,0],
		[0,2,0,0,0,0,2,1,1,1,1,1,1,1,1,1,0,0,0],
		[0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0]
	];
	
	this.floor = [
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0],
		[0,0,0,0,0,5,5,4,4,4,5,5,0,0,0,0,0,0,0],
		[0,0,0,0,0,5,5,5,4,5,5,5,0,0,0,0,0,0,0],
		[0,0,0,0,0,5,5,5,4,5,5,5,0,0,0,0,0,0,0],
		[0,0,0,0,0,5,5,5,4,5,5,5,0,0,0,0,0,0,0],
		[0,0,0,0,0,5,5,5,4,5,5,5,0,0,0,0,0,0,0],
		[0,0,0,0,0,5,5,4,4,4,4,4,0,0,0,1,1,1,0],
		[0,0,0,0,0,0,0,4,4,4,0,0,0,0,1,1,1,1,0],
		[0,0,0,0,0,0,0,4,4,4,0,0,0,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,4,4,4,4,4,4,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,4,4,4,4,4,4,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,4,4,4,4,4,4,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,0,0,0,4,4,4,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,0,0,0,4,4,4,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,1,1,1,4,4,4,1,1,1,0,0,0],
		[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0],
		[0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0],
		[0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0],
		[0,2,2,2,2,1,5,5,5,5,5,5,5,5,5,5,0,0,0],
		[0,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,0,0,0],
		[0,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,0,0,0],
		[0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0]
	];
	
	var A = [-1, 0,-0.3, 0];
	var B = [-1,-1,   0, 0];
	this.floorY = [
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,A,A,A,A,A,A,A,0,0,0,0,0,0,0],
		[0,0,0,0,0,A,A,B,B,B,A,A,0,0,0,0,0,0,0],
		[0,0,0,0,0,A,A,A,B,A,A,A,0,0,0,0,0,0,0],
		[0,0,0,0,0,A,A,A,B,A,A,A,0,0,0,0,0,0,0],
		[0,0,0,0,0,A,A,A,B,A,A,A,0,0,0,0,0,0,0],
		[0,0,0,0,0,A,A,A,B,A,A,A,0,0,0,0,0,0,0],
		[0,0,0,0,0,A,A,A,B,A,A,A,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,B,B,B,B,B,B,B,0,0,0,0],
		[0,0,0,A,A,A,A,A,A,A,A,A,A,A,A,A,0,0,0],
		[0,0,0,A,A,A,A,A,A,A,A,A,A,A,A,A,0,0,0],
		[0,0,0,A,B,A,A,A,A,A,A,A,A,A,A,A,0,0,0],
		[0,0,0,0,0,0,0,0,B,B,B,B,B,B,B,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	];
	
	this.ceil = [
		[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0],
		[0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0],
		[0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0],
		[0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0],
		[0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0],
		[0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0],
		[0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,7,7,7,0],
		[0,0,0,0,0,0,0,7,7,7,0,0,0,0,7,7,7,7,0],
		[0,0,0,0,0,0,0,7,7,7,0,0,0,7,7,7,7,7,7],
		[0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7],
		[0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7],
		[0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7],
		[0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7],
		[0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7],
		[0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,0,0,0],
		[0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,0,0,0],
		[0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0],
		[0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0],
		[0,2,2,2,2,7,7,7,7,7,7,7,7,7,7,7,0,0,0],
		[0,2,2,2,2,2,2,7,7,7,7,7,7,7,7,7,0,0,0],
		[0,2,2,2,2,2,2,7,7,7,7,7,7,7,7,7,0,0,0],
		[0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0],
		[0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0]
	];
	
	this.waterTiles = [5];
	this.player = new Player(vec3(8.5, 0.0, 3.5), vec3(0.0, Math.PI3_2, 0.0), this);
};

MapManager.prototype.isWaterTile = function(tileId){
	return (this.waterTiles.indexOf(tileId) != -1);
};

MapManager.prototype.isWaterPosition = function(x, z){
	x = x << 0;
	z = z << 0;
	if (!this.floor[z]) return 0;
	if (this.floor[z][x] === undefined) return 0;
	else if (this.floor[z][x] === 0) return 0;
	
	var t = this.floor[z][x];
	
	return this.isWaterTile(t);
};

MapManager.prototype.isSolid = function(x, y, z){
	x = (x << 0);
	z = (z << 0);
	
	if (!this.map[z]) return false;
	if (this.map[z][x] == undefined) return false;
	var t = this.map[z][x];
	
	if (t == 0) return false;
	
	var f = this.floorY[z][x];
	if (f[1] < y) return false;
	
	var tex = this.game.getTextureById(t);
	return tex.isSolid;
};

MapManager.prototype.getYFloor = function(x, y){
	x = x << 0;
	y = y << 0;
	if (!this.floorY[y]) return 0;
	if (this.floorY[y][x] === undefined) return 0;
	else if (this.floorY[y][x] === 0) return 0;
	
	var t = this.floorY[y][x];
	return t[2];
};

MapManager.prototype.drawMap = function(){
	var x1, x2, y1, y2;
	
	x1 = (this.player.position.a << 0) - 10;
	x2 = x1 + 20;
	y1 = (this.player.position.c << 0) - 10;
	y2 = y1 + 20;
	
	if (x1 < 0) x1 = 0;
	if (x2 >= this.map[0].length) x2 = this.map[0].length;
	
	if (y1 < 0) y1 = 0;
	if (y2 >= this.map.length) y2 = this.map.length;
	
	for (var i=y1;i<y2;i++){
		for (var j=x1;j<x2;j++){
			var fy = this.floorY[i][j];
			var yy1 = (fy === 0)? 0 : fy[0];
			var yy2 = (fy === 0)? 0 : fy[1];
			
			// Draw wall
			var t = this.map[i][j];
			if (t != 0){ 
				for (var wy=yy1;wy<=yy2;wy++)
					this.game.drawBlock(j, wy, i, t);
			}
			
			// Draw floor
			t = this.floor[i][j];
			yy1 = (fy === 0)? 0 : fy[2];
			if (this.isWaterTile(t)) t = t + (this.waterFrame << 0);
			if (t != 0){ this.game.drawFloor(j, -0.5 + yy1, i, t); }
			
			// Draw ceil
			t = this.ceil[i][j];
			yy1 = (fy === 0)? 0 : fy[3];
			if (t != 0){ this.game.drawFloor(j, 0.5 + yy1, i, t); }
		}
	}
};

MapManager.prototype.step = function(){
	this.waterFrame += 0.1;
	if (this.waterFrame >= 2) this.waterFrame = 0;
};

MapManager.prototype.loop = function(){
	this.step();
	
	this.player.loop();
	
	this.drawMap();
};
